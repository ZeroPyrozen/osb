<!DOCTYPE html>
<html lang="en">

<head>
    <title>
        @ViewData["Title"]
    </title>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" type="image/x-icon" href="/static/base/img/favicon.ico">
    <link rel="stylesheet" href="~/cssV2/style.css">
    <link rel="stylesheet" href="~/cssV2/style_resize.css">
    <link rel="stylesheet" href="~/cssV2/beatmap.css">
    <link rel="stylesheet" href="~/cssV2/update.css">
</head>

<body>
    <img class="splash" src="~/staticV2/img/home splash.png" alt="">
    <nav class="container-bar-style">
        <a href="@Url.ActionLink("Home", "Future", new { code = "WYSI"})">
            <img src="~/staticV2/svg/osb.svg" alt="">
        </a>
        <div class="container-nav-button">
            <button onclick="window.location.href = '@Url.ActionLink("Showcase", "Future", new { code = "WYSI"})';" class="nav-button">Showcase</button>
            <button onclick="window.location.href = '@Url.ActionLink("Learn", "Future", new { code = "WYSI"})';" class="nav-button">Laboratory</button>
            <button onclick="window.location.href = '@Url.ActionLink("Community", "Future", new { code = "WYSI"})';" class="nav-button">Community</button>
        </div>
        @if (ViewData["Login"] != null)
        {
            string ID = ViewData["UserID"].ToString();
            <a class="navbar-brand d-none d-lg-block" href="/community/profile?userID=@ID"><img src="https://a.ppy.sh/@ID"
                    alt="..." height="56"></a>
            <ul class="nav navbar-nav navbar-right">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown"
                        aria-haspopup="true" aria-expanded="false">
                        @ViewData["Username"].ToString()
                    </a>
                    <div class="dropdown-menu bg-inverse" aria-labelledby="navbarDropdown">
                        <a class="dropdown-item" href="/community/profile?userID=@ID">Profile</a>
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" href="/auth/logout">Log Out</a>
                    </div>
                </li>
            </ul>
        }
        else
        {
            <div class="auth-container">
                <button onclick="window.location.href = '/auth';" class="button-osb">Login</button>
            </div>
        }
    </nav>
    @RenderBody()
    <footer class="container-footer-bar-style">
        <div class="osb-promo-container">
            <img src="~/staticV2/svg/osb-salad.svg" alt="">
            <div class="promo">Unleash Your Visual Storytelling Talent.</div>
        </div>
        <div class="social-container">
            <button id="helpTranslate" class="footer-button">
                <img src="~/staticV2/svg/language.svg" alt="">
                Help Translate
            </button>
            <button id="changeLang" class="footer-button">
                <img src="~/staticV2/svg/language.svg" alt="">
                Language
                <img id="arrowLang" src="~/staticV2/svg/arrow-top.svg" alt="">
            </button>
            <button id="discord" class="footer-button">
                <img src="~/staticV2/svg/discord.svg" alt="">
                Discord
            </button>
            <div id="langShow" class="change-language">
                <button><img src="~/staticV2/svg/flags/GB.svg" alt="">English</button>
                <button><img src="~/staticV2/svg/flags/RU.svg" alt="">Русский</button>
                <button><img src="~/staticV2/svg/flags/JP.svg" alt="">日本語</button>
                <button><img src="~/staticV2/svg/flags/ID.svg" alt="">Indonesia</button>
            </div>
        </div>
    </footer>
</body>
<script src="~/jsV2/language.js"></script>

</html>

<script>
// Получаем все элементы на странице, имеющие указанный класс
let elements = document.querySelectorAll('.beatmap');

// Определяем функцию, которая проверяет, находится ли элемент в области видимости
function isInViewport(element) {
  const rect = element.getBoundingClientRect();
  return (
    rect.top >= -200 &&
    rect.left >= 0 &&
    rect.bottom <= ((window.innerHeight + 200) || document.documentElement.clientHeight) &&
    rect.right <= (window.innerWidth || document.documentElement.clientWidth)
  );
}

// Определяем функцию, которая будет запускаться при скролле страницы
function onScroll() {
  // Проходим циклом по всем элементам на странице
  elements.forEach(element => {
    // Если элемент в области видимости, то восстанавливаем его картинку и непрозрачность
    if (isInViewport(element)) {
      element.style.opacity = 1;
      element.style.scale = 1;
    } else {
      // Иначе, скрываем картинку и делаем элемент прозрачным
      element.style.opacity = 0;
      element.style.scale = 0;
    }
  });
}

// Добавляем обработчик события на скролл страницы
window.addEventListener('scroll', onScroll);

</script>
