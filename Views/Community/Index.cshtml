@model osb.ViewModels.CommunityViewModel
@{
    ViewData["Title"] = "Storyboarding Community!";
}
<link rel="stylesheet" href="/static/base/sb.css">
<link rel="stylesheet" href="static/base/carousel.css">
<header class="opening-banner-community">
    <h1 class="display opening-header">Storyboarders Unite!</h1>
    <div class="bae-community"></div>
</header>

<h1 class="special-banner-community top-header">Discord</h1>

<div class="media">
    <div class="media-left"><img src="/static/base/img/discord.gif" alt="Discord Screenshot" height="400px" /></div>
    <div class="media-body" style="margin:5em">
        <p>There's often a high learning curve for a newbie getting into storyboarding. If you're stuck with a problem, it can be pretty frustrating when there's no one to ask for help, or if there isn't any good documentation online. That's where OSB comes in. We're primarily a Discord server whose main goal is to help and collaborate with others to make the best visual animations osu! has ever seen. Well, that, and have a shrine for Hifumi.</p>
        <p>Do you like storyboards on osu!? Do you want to learn how to make your own? Do you want to improve your storyboarding? Do you want to just worship Hifumi? Feel free to come by our Discord server.</p>
        <p class="h3"><a class="btn btn-light btn-block btn-lg" href="https://discord.gg/B8NX7YW" target="_blank">Click here to join our Discord!</a></p>
    </div>
</div>
<h1 class="special-banner-community rounded">Special Credits</h1>
<p>Our community is brought to you by amazing osu! players, mappers, and, most importantly among our site, storyboarders. Without these guys, we wouldn't have such wondrous visual works on osu!.</p>
<div class="card-deck mx-auto" style="justify-content:center">
    @{ 
        int rowCount = Model.storyboarders.Count / 5;
        if (Model.storyboarders.Count % 5 != 0)
            rowCount += 1;
        int iterator = 0;
    }  
    @for (int i = 0; i < rowCount; i++)
    {
        <div class="row">
            @for (int j = 0; j < 5 && iterator < Model.storyboarders.Count; j++)
            {
                var primaryRole = Model.storyboarders[iterator].GetPrimaryRole();
                <a href="/community/profile?userID=@Model.storyboarders[iterator].UserID" style="text-decoration:none" target="_blank">
                    <div class="card" style="width: 10rem;margin: 20px;">
                        <img class="card-img-top" src="@Model.storyboarders[iterator].UserAvatarUrl" alt="@Model.storyboarders[iterator].Username 's pretty face">
                        <div class="card-body" style="max-height: 50%; overflow: hidden; padding: 10px; background-color: #36393f">
                            <p class="card-text" style="text-align: center;">@Model.storyboarders[iterator].Username</p>
                            @if(primaryRole != null)
                            {
                                <p class="card-text" style="text-align: center;color: @primaryRole.RoleHexColour">@primaryRole.RoleName</p>
                            }      
                        </div>
                    </div>
                </a>
                iterator++;
            }
        </div>
    }
</div>
